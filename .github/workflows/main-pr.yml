name: main-pr

on:
  pull_request:
    types: [closed]
    branches:
      - develop

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  Main-pr-generate-and-merge:
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.title, 'chore(develop)')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout develop
        uses: actions/checkout@v4
        with:
          ref: develop
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Get Data
        id: get-data
        run: |
          git fetch origin develop

          # Capture commit message safely
          COMMIT_MSG=$(git log origin/develop -1 --pretty=%B)
          # Trim any trailing newline
          COMMIT_MSG="${COMMIT_MSG%"${COMMIT_MSG##*[![:space:]]}"}"
          echo "commit_msg<<EOF" >> "$GITHUB_OUTPUT"
          echo "$COMMIT_MSG" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

          # Capture version (may be empty)
          VERSION=$(echo "$COMMIT_MSG" | grep -oP '\d+\.\d+\.\d+')
          echo "version=$VERSION" >> $GITHUB_OUTPUT


      - name: Create PR from develop to main
        id: create-pr
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_URL=$(gh pr create \
          --base main \
          --head develop \
          --title "$(echo "${{ github.event.pull_request.title }}" | sed 's/chore(develop):/chore(main):/')" \
          --body "${{ github.event.pull_request.body }}")

          PR_NUMBER=$(echo "$PR_URL" | grep -oE '[0-9]+$')
          echo "pull-request-number=$PR_NUMBER" >> "$GITHUB_OUTPUT"

      - name: Merge PR
        id: merge-pr
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          COMMIT_MSG="$(echo "${{ steps.get-data.outputs.commit_msg }}")"
          FINAL_MSG=$(echo "$COMMIT_MSG" | sed 's/chore(develop):/chore(main):/')
          
          git fetch origin main
          git checkout main

          git merge --no-ff "origin/develop" -m "$FINAL_MSG"
          git push origin main


      - name: Add published label to PR
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: ${{ steps.create-pr.outputs.pull-request-number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ["autorelease: published"]
            })

      - name: Tag main
        id: tag-main
        run: |
              git fetch origin main
              git tag -f "${{ steps.get-data.outputs.version }}"
              git push -f origin "${{ steps.get-data.outputs.version }}"
